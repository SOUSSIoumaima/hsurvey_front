name: Create and publish a Docker image
on:
  push:
    branches: ['main']
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  selenium-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start full stack with Docker Compose
        run: |
          docker compose up -d
          # attendre que le front et gateway r√©pondent
          for i in {1..30}; do
            if curl -s http://localhost:3000 && curl -s http://localhost:8080; then
              echo "Services ready!"
              break
            fi
            echo "Waiting..."
            sleep 2
          done
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          INTERNAL_SERVICE_SECRET: ${{ secrets.INTERNAL_SERVICE_SECRET }}
          SHARED_DB_USER: ${{ secrets.SHARED_DB_USER }}
          SHARED_DB_PASSWORD: ${{ secrets.SHARED_DB_PASSWORD }}
          SHARED_DB_NAME: ${{ secrets.SHARED_DB_NAME }}
          REACT_APP_API_URL: http://localhost:8080/api
          REACT_APP_URL: http://localhost:3000 
          

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Selenium dependencies
        run: |
          pip install selenium pytest webdriver-manager

      - name: Run Selenium tests
        run: pytest tests/
        env:
          REACT_APP_URL: http://localhost:3000